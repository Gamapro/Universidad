
Examen1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ba  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000f4e  2**0
                  ALLOC, LOAD, DATA
  2 .bss          00000020  00800060  00800060  00000f4e  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000f4e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  00000fa9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000015e8  00000000  00000000  00001031  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000077d  00000000  00000000  00002619  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000077d  00000000  00000000  00002d96  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  00003514  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001e1  00000000  00000000  000036f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000094e  00000000  00000000  000038d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000078  00000000  00000000  00004223  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000e76  00000e76  00000f2a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000429c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.hastaTecla 000000a0  00000a0c  00000a0c  00000ac0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.saca_uno 00000018  00000e5e  00000e5e  00000f12  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.saca_cero 0000001a  00000e44  00000e44  00000ef8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LCD_wr_inst_ini 00000038  00000cdc  00000cdc  00000d90  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LCD_wait_flag 000000a4  00000968  00000968  00000a1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.LCD_wr_char 00000088  00000aac  00000aac  00000b60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.LCD_wr_string 00000034  00000db8  00000db8  00000e6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LCD_wr_instruction 0000007e  00000b34  00000b34  00000be8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .progmemx.data 00000058  000000ba  000000ba  0000016e  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 23 .text.print_precio 000000c0  00000738  00000738  000007ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__vector_18 000000b4  000008b4  000008b4  00000968  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.LCD_init 0000006c  00000c2a  00000c2a  00000cde  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.start   00000026  00000e1e  00000e1e  00000ed2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.main    000001de  0000055a  0000055a  0000060e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .bss.puerto   00000001  008000a0  008000a0  00000f4e  2**0
                  ALLOC
 29 .bss.pago     00000001  008000a1  008000a1  00000f4e  2**0
                  ALLOC
 30 .bss.precio   00000001  008000a2  008000a2  00000f4e  2**0
                  ALLOC
 31 .bss.cont     00000001  008000a3  008000a3  00000f4e  2**0
                  ALLOC
 32 .bss.b        00000001  008000a4  008000a4  00000f4e  2**0
                  ALLOC
 33 .bss.a        00000001  008000a5  008000a5  00000f4e  2**0
                  ALLOC
 34 .bss.py       00000001  008000a6  008000a6  00000f4e  2**0
                  ALLOC
 35 .bss.px       00000001  008000a7  008000a7  00000f4e  2**0
                  ALLOC
 36 .data.keyboard_char 00000010  00800080  00000e7a  00000f2e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 37 .data.keyboard 00000010  00800090  00000e8a  00000f3e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 38 .text.avrlibc 00000032  00000dec  00000dec  00000ea0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.avrlibc 00000046  00000c96  00000c96  00000d4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.avrlibc 00000448  00000112  00000112  000001c6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.avrlibc 00000036  00000d4c  00000d4c  00000e00  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.avrlibc 00000078  00000bb2  00000bb2  00000c66  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.avrlibc 000000bc  000007f8  000007f8  000008ac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.libgcc.prologue 00000038  00000d14  00000d14  00000dc8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.libgcc.prologue 00000036  00000d82  00000d82  00000e36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 33 00 	jmp	0x66	; 0x66 <__ctors_end>
   4:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
   8:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
   c:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  10:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  14:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  18:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  1c:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  20:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  24:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  28:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  2c:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  30:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  34:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  38:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  3c:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  40:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  44:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  48:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__vector_18>
  4c:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>
  50:	0c 94 3b 07 	jmp	0xe76	; 0xe76 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 80       	ld	r0, Z
  58:	80 00       	.word	0x0080	; ????
  5a:	80 00       	.word	0x0080	; ????
  5c:	a0 00       	.word	0x00a0	; ????
  5e:	0e 7a       	andi	r16, 0xAE	; 174
  60:	00 a0       	ldd	r0, Z+32	; 0x20
  62:	00 a8       	ldd	r0, Z+48	; 0x30
  64:	80 00       	.word	0x0080	; ????

00000066 <__ctors_end>:
  66:	11 24       	eor	r1, r1
  68:	1f be       	out	0x3f, r1	; 63
  6a:	cf e5       	ldi	r28, 0x5F	; 95
  6c:	d4 e0       	ldi	r29, 0x04	; 4
  6e:	de bf       	out	0x3e, r29	; 62
  70:	cd bf       	out	0x3d, r28	; 61

00000072 <__do_copy_data>:
  72:	e4 e5       	ldi	r30, 0x54	; 84
  74:	f0 e0       	ldi	r31, 0x00	; 0
  76:	40 e0       	ldi	r20, 0x00	; 0
  78:	17 c0       	rjmp	.+46     	; 0xa8 <__do_clear_bss+0x8>
  7a:	b5 91       	lpm	r27, Z+
  7c:	a5 91       	lpm	r26, Z+
  7e:	35 91       	lpm	r19, Z+
  80:	25 91       	lpm	r18, Z+
  82:	05 91       	lpm	r16, Z+
  84:	07 fd       	sbrc	r16, 7
  86:	0c c0       	rjmp	.+24     	; 0xa0 <__do_clear_bss>
  88:	95 91       	lpm	r25, Z+
  8a:	85 91       	lpm	r24, Z+
  8c:	ef 01       	movw	r28, r30
  8e:	f9 2f       	mov	r31, r25
  90:	e8 2f       	mov	r30, r24
  92:	05 90       	lpm	r0, Z+
  94:	0d 92       	st	X+, r0
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	d9 f7       	brne	.-10     	; 0x92 <__do_copy_data+0x20>
  9c:	fe 01       	movw	r30, r28
  9e:	04 c0       	rjmp	.+8      	; 0xa8 <__do_clear_bss+0x8>

000000a0 <__do_clear_bss>:
  a0:	1d 92       	st	X+, r1
  a2:	a2 17       	cp	r26, r18
  a4:	b3 07       	cpc	r27, r19
  a6:	e1 f7       	brne	.-8      	; 0xa0 <__do_clear_bss>
  a8:	e5 36       	cpi	r30, 0x65	; 101
  aa:	f4 07       	cpc	r31, r20
  ac:	31 f7       	brne	.-52     	; 0x7a <__do_copy_data+0x8>
  ae:	0e 94 ad 02 	call	0x55a	; 0x55a <main>
  b2:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <_exit>

000000b6 <_exit>:
  b6:	f8 94       	cli

000000b8 <__stop_program>:
  b8:	ff cf       	rjmp	.-2      	; 0xb8 <__stop_program>

Disassembly of section .text:

00000e76 <__bad_interrupt>:
 e76:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.hastaTecla:

00000a0c <hastaTecla>:
	LCD_wr_instruction(LCD_Cmd_Home);
	LCD_wr_instruction(0b10000000);
	LCD_wr_string(a);
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
 a0c:	30 e0       	ldi	r19, 0x00	; 0
 a0e:	43 2f       	mov	r20, r19
 a10:	50 e0       	ldi	r21, 0x00	; 0
 a12:	81 e0       	ldi	r24, 0x01	; 1
 a14:	90 e0       	ldi	r25, 0x00	; 0
 a16:	03 2e       	mov	r0, r19
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <hastaTecla+0x12>
 a1a:	88 0f       	add	r24, r24
 a1c:	99 1f       	adc	r25, r25
 a1e:	0a 94       	dec	r0
 a20:	e2 f7       	brpl	.-8      	; 0xa1a <hastaTecla+0xe>
 a22:	80 95       	com	r24
 a24:	85 bb       	out	0x15, r24	; 21
 a26:	00 00       	nop
 a28:	00 00       	nop
 a2a:	24 e0       	ldi	r18, 0x04	; 4
 a2c:	3a c0       	rjmp	.+116    	; 0xaa2 <hastaTecla+0x96>
 a2e:	83 b3       	in	r24, 0x13	; 19
 a30:	62 2f       	mov	r22, r18
 a32:	70 e0       	ldi	r23, 0x00	; 0
 a34:	90 e0       	ldi	r25, 0x00	; 0
 a36:	02 2e       	mov	r0, r18
 a38:	02 c0       	rjmp	.+4      	; 0xa3e <hastaTecla+0x32>
 a3a:	95 95       	asr	r25
 a3c:	87 95       	ror	r24
 a3e:	0a 94       	dec	r0
 a40:	e2 f7       	brpl	.-8      	; 0xa3a <hastaTecla+0x2e>
 a42:	80 fd       	sbrc	r24, 0
 a44:	2d c0       	rjmp	.+90     	; 0xaa0 <hastaTecla+0x94>
 a46:	83 ed       	ldi	r24, 0xD3	; 211
 a48:	90 e3       	ldi	r25, 0x30	; 48
 a4a:	01 97       	sbiw	r24, 0x01	; 1
 a4c:	f1 f7       	brne	.-4      	; 0xa4a <hastaTecla+0x3e>
 a4e:	00 c0       	rjmp	.+0      	; 0xa50 <hastaTecla+0x44>
 a50:	00 00       	nop
 a52:	83 b3       	in	r24, 0x13	; 19
 a54:	90 e0       	ldi	r25, 0x00	; 0
 a56:	06 2e       	mov	r0, r22
 a58:	02 c0       	rjmp	.+4      	; 0xa5e <hastaTecla+0x52>
 a5a:	95 95       	asr	r25
 a5c:	87 95       	ror	r24
 a5e:	0a 94       	dec	r0
 a60:	e2 f7       	brpl	.-8      	; 0xa5a <hastaTecla+0x4e>
 a62:	80 ff       	sbrs	r24, 0
 a64:	f6 cf       	rjmp	.-20     	; 0xa52 <hastaTecla+0x46>
 a66:	83 ed       	ldi	r24, 0xD3	; 211
 a68:	90 e3       	ldi	r25, 0x30	; 48
 a6a:	01 97       	sbiw	r24, 0x01	; 1
 a6c:	f1 f7       	brne	.-4      	; 0xa6a <hastaTecla+0x5e>
 a6e:	00 c0       	rjmp	.+0      	; 0xa70 <hastaTecla+0x64>
 a70:	00 00       	nop
 a72:	20 93 a7 00 	sts	0x00A7, r18	; 0x8000a7 <px>
 a76:	30 93 a6 00 	sts	0x00A6, r19	; 0x8000a6 <py>
 a7a:	87 e0       	ldi	r24, 0x07	; 7
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	86 1b       	sub	r24, r22
 a80:	97 0b       	sbc	r25, r23
 a82:	23 e0       	ldi	r18, 0x03	; 3
 a84:	30 e0       	ldi	r19, 0x00	; 0
 a86:	24 1b       	sub	r18, r20
 a88:	35 0b       	sbc	r19, r21
 a8a:	88 0f       	add	r24, r24
 a8c:	99 1f       	adc	r25, r25
 a8e:	88 0f       	add	r24, r24
 a90:	99 1f       	adc	r25, r25
 a92:	80 57       	subi	r24, 0x70	; 112
 a94:	9f 4f       	sbci	r25, 0xFF	; 255
 a96:	fc 01       	movw	r30, r24
 a98:	e2 0f       	add	r30, r18
 a9a:	f3 1f       	adc	r31, r19
 a9c:	80 81       	ld	r24, Z
 a9e:	08 95       	ret
 aa0:	2f 5f       	subi	r18, 0xFF	; 255
 aa2:	28 30       	cpi	r18, 0x08	; 8
 aa4:	20 f2       	brcs	.-120    	; 0xa2e <hastaTecla+0x22>
 aa6:	3f 5f       	subi	r19, 0xFF	; 255
 aa8:	33 70       	andi	r19, 0x03	; 3
 aaa:	b1 cf       	rjmp	.-158    	; 0xa0e <hastaTecla+0x2>

Disassembly of section .text.saca_uno:

00000e5e <saca_uno>:
	DDRLCD|=(15<<0)|(1<<RS)|(1<<RW)|(1<<E);
}


void saca_uno(volatile uint8_t *LUGAR, uint8_t BIT){ // al usarla, no olvidar el &
	*LUGAR=*LUGAR|(1<<BIT);
 e5e:	fc 01       	movw	r30, r24
 e60:	40 81       	ld	r20, Z
 e62:	21 e0       	ldi	r18, 0x01	; 1
 e64:	30 e0       	ldi	r19, 0x00	; 0
 e66:	02 c0       	rjmp	.+4      	; 0xe6c <saca_uno+0xe>
 e68:	22 0f       	add	r18, r18
 e6a:	33 1f       	adc	r19, r19
 e6c:	6a 95       	dec	r22
 e6e:	e2 f7       	brpl	.-8      	; 0xe68 <saca_uno+0xa>
 e70:	24 2b       	or	r18, r20
 e72:	20 83       	st	Z, r18
 e74:	08 95       	ret

Disassembly of section .text.saca_cero:

00000e44 <saca_cero>:
}

void saca_cero(volatile uint8_t *LUGAR, uint8_t BIT){// al usarla, no olvidar el &
 e44:	fc 01       	movw	r30, r24
	*LUGAR=*LUGAR&~(1<<BIT);
 e46:	90 81       	ld	r25, Z
 e48:	21 e0       	ldi	r18, 0x01	; 1
 e4a:	30 e0       	ldi	r19, 0x00	; 0
 e4c:	02 c0       	rjmp	.+4      	; 0xe52 <saca_cero+0xe>
 e4e:	22 0f       	add	r18, r18
 e50:	33 1f       	adc	r19, r19
 e52:	6a 95       	dec	r22
 e54:	e2 f7       	brpl	.-8      	; 0xe4e <saca_cero+0xa>
 e56:	20 95       	com	r18
 e58:	29 23       	and	r18, r25
 e5a:	20 83       	st	Z, r18
 e5c:	08 95       	ret

Disassembly of section .text.LCD_wr_inst_ini:

00000cdc <LCD_wr_inst_ini>:
	saca_cero(&PORTLCD,RS);
	LCD_wait_flag();
}

void LCD_wr_inst_ini(uint8_t instruccion){
	PORTLCD=instruccion; //Saco el dato y le digo que escribir? un dato
 cdc:	8b bb       	out	0x1b, r24	; 27
	saca_cero(&PORTLCD,RS);
 cde:	65 e0       	ldi	r22, 0x05	; 5
 ce0:	8b e3       	ldi	r24, 0x3B	; 59
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
	saca_cero(&PORTLCD,RW);
 ce8:	66 e0       	ldi	r22, 0x06	; 6
 cea:	8b e3       	ldi	r24, 0x3B	; 59
 cec:	90 e0       	ldi	r25, 0x00	; 0
 cee:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
	saca_uno(&PORTLCD,E);
 cf2:	64 e0       	ldi	r22, 0x04	; 4
 cf4:	8b e3       	ldi	r24, 0x3B	; 59
 cf6:	90 e0       	ldi	r25, 0x00	; 0
 cf8:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 cfc:	83 ec       	ldi	r24, 0xC3	; 195
 cfe:	99 e0       	ldi	r25, 0x09	; 9
 d00:	01 97       	sbiw	r24, 0x01	; 1
 d02:	f1 f7       	brne	.-4      	; 0xd00 <LCD_wr_inst_ini+0x24>
 d04:	00 c0       	rjmp	.+0      	; 0xd06 <LCD_wr_inst_ini+0x2a>
 d06:	00 00       	nop
	_delay_ms(10);
	saca_cero(&PORTLCD,E);
 d08:	64 e0       	ldi	r22, 0x04	; 4
 d0a:	8b e3       	ldi	r24, 0x3B	; 59
 d0c:	90 e0       	ldi	r25, 0x00	; 0
 d0e:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 d12:	08 95       	ret

Disassembly of section .text.LCD_wait_flag:

00000968 <LCD_wait_flag>:
	LCD_wr_instruction(LCD_Cmd_Home);
	LCD_wr_instruction(0b10000000);
	LCD_wr_string(a);
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
 968:	8a b3       	in	r24, 0x1a	; 26
 96a:	80 7f       	andi	r24, 0xF0	; 240
 96c:	8a bb       	out	0x1a, r24	; 26
 96e:	65 e0       	ldi	r22, 0x05	; 5
 970:	8b e3       	ldi	r24, 0x3B	; 59
 972:	90 e0       	ldi	r25, 0x00	; 0
 974:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 978:	66 e0       	ldi	r22, 0x06	; 6
 97a:	8b e3       	ldi	r24, 0x3B	; 59
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 982:	64 e0       	ldi	r22, 0x04	; 4
 984:	8b e3       	ldi	r24, 0x3B	; 59
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 98c:	83 ec       	ldi	r24, 0xC3	; 195
 98e:	99 e0       	ldi	r25, 0x09	; 9
 990:	01 97       	sbiw	r24, 0x01	; 1
 992:	f1 f7       	brne	.-4      	; 0x990 <LCD_wait_flag+0x28>
 994:	00 c0       	rjmp	.+0      	; 0x996 <LCD_wait_flag+0x2e>
 996:	00 00       	nop
 998:	64 e0       	ldi	r22, 0x04	; 4
 99a:	8b e3       	ldi	r24, 0x3B	; 59
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 9a2:	cb 99       	sbic	0x19, 3	; 25
 9a4:	15 c0       	rjmp	.+42     	; 0x9d0 <LCD_wait_flag+0x68>
 9a6:	93 e0       	ldi	r25, 0x03	; 3
 9a8:	9a 95       	dec	r25
 9aa:	f1 f7       	brne	.-4      	; 0x9a8 <LCD_wait_flag+0x40>
 9ac:	00 00       	nop
 9ae:	64 e0       	ldi	r22, 0x04	; 4
 9b0:	8b e3       	ldi	r24, 0x3B	; 59
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 9b8:	83 ec       	ldi	r24, 0xC3	; 195
 9ba:	99 e0       	ldi	r25, 0x09	; 9
 9bc:	01 97       	sbiw	r24, 0x01	; 1
 9be:	f1 f7       	brne	.-4      	; 0x9bc <LCD_wait_flag+0x54>
 9c0:	00 c0       	rjmp	.+0      	; 0x9c2 <LCD_wait_flag+0x5a>
 9c2:	00 00       	nop
 9c4:	64 e0       	ldi	r22, 0x04	; 4
 9c6:	8b e3       	ldi	r24, 0x3B	; 59
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 9ce:	d9 cf       	rjmp	.-78     	; 0x982 <LCD_wait_flag+0x1a>
 9d0:	64 e0       	ldi	r22, 0x04	; 4
 9d2:	8b e3       	ldi	r24, 0x3B	; 59
 9d4:	90 e0       	ldi	r25, 0x00	; 0
 9d6:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 9da:	83 ec       	ldi	r24, 0xC3	; 195
 9dc:	99 e0       	ldi	r25, 0x09	; 9
 9de:	01 97       	sbiw	r24, 0x01	; 1
 9e0:	f1 f7       	brne	.-4      	; 0x9de <LCD_wait_flag+0x76>
 9e2:	00 c0       	rjmp	.+0      	; 0x9e4 <LCD_wait_flag+0x7c>
 9e4:	00 00       	nop
 9e6:	64 e0       	ldi	r22, 0x04	; 4
 9e8:	8b e3       	ldi	r24, 0x3B	; 59
 9ea:	90 e0       	ldi	r25, 0x00	; 0
 9ec:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 9f0:	65 e0       	ldi	r22, 0x05	; 5
 9f2:	8b e3       	ldi	r24, 0x3B	; 59
 9f4:	90 e0       	ldi	r25, 0x00	; 0
 9f6:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 9fa:	66 e0       	ldi	r22, 0x06	; 6
 9fc:	8b e3       	ldi	r24, 0x3B	; 59
 9fe:	90 e0       	ldi	r25, 0x00	; 0
 a00:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 a04:	8a b3       	in	r24, 0x1a	; 26
 a06:	8f 67       	ori	r24, 0x7F	; 127
 a08:	8a bb       	out	0x1a, r24	; 26
 a0a:	08 95       	ret

Disassembly of section .text.LCD_wr_char:

00000aac <LCD_wr_char>:
 aac:	cf 93       	push	r28
 aae:	c8 2f       	mov	r28, r24
 ab0:	82 95       	swap	r24
 ab2:	8f 70       	andi	r24, 0x0F	; 15
 ab4:	8b bb       	out	0x1b, r24	; 27
 ab6:	65 e0       	ldi	r22, 0x05	; 5
 ab8:	8b e3       	ldi	r24, 0x3B	; 59
 aba:	90 e0       	ldi	r25, 0x00	; 0
 abc:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 ac0:	66 e0       	ldi	r22, 0x06	; 6
 ac2:	8b e3       	ldi	r24, 0x3B	; 59
 ac4:	90 e0       	ldi	r25, 0x00	; 0
 ac6:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 aca:	64 e0       	ldi	r22, 0x04	; 4
 acc:	8b e3       	ldi	r24, 0x3B	; 59
 ace:	90 e0       	ldi	r25, 0x00	; 0
 ad0:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 ad4:	83 ec       	ldi	r24, 0xC3	; 195
 ad6:	99 e0       	ldi	r25, 0x09	; 9
 ad8:	01 97       	sbiw	r24, 0x01	; 1
 ada:	f1 f7       	brne	.-4      	; 0xad8 <LCD_wr_char+0x2c>
 adc:	00 c0       	rjmp	.+0      	; 0xade <LCD_wr_char+0x32>
 ade:	00 00       	nop
 ae0:	64 e0       	ldi	r22, 0x04	; 4
 ae2:	8b e3       	ldi	r24, 0x3B	; 59
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 aea:	cf 70       	andi	r28, 0x0F	; 15
 aec:	cb bb       	out	0x1b, r28	; 27
 aee:	65 e0       	ldi	r22, 0x05	; 5
 af0:	8b e3       	ldi	r24, 0x3B	; 59
 af2:	90 e0       	ldi	r25, 0x00	; 0
 af4:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 af8:	66 e0       	ldi	r22, 0x06	; 6
 afa:	8b e3       	ldi	r24, 0x3B	; 59
 afc:	90 e0       	ldi	r25, 0x00	; 0
 afe:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b02:	64 e0       	ldi	r22, 0x04	; 4
 b04:	8b e3       	ldi	r24, 0x3B	; 59
 b06:	90 e0       	ldi	r25, 0x00	; 0
 b08:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 b0c:	83 ec       	ldi	r24, 0xC3	; 195
 b0e:	99 e0       	ldi	r25, 0x09	; 9
 b10:	01 97       	sbiw	r24, 0x01	; 1
 b12:	f1 f7       	brne	.-4      	; 0xb10 <LCD_wr_char+0x64>
 b14:	00 c0       	rjmp	.+0      	; 0xb16 <LCD_wr_char+0x6a>
 b16:	00 00       	nop
 b18:	64 e0       	ldi	r22, 0x04	; 4
 b1a:	8b e3       	ldi	r24, 0x3B	; 59
 b1c:	90 e0       	ldi	r25, 0x00	; 0
 b1e:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b22:	65 e0       	ldi	r22, 0x05	; 5
 b24:	8b e3       	ldi	r24, 0x3B	; 59
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b2c:	0e 94 b4 04 	call	0x968	; 0x968 <LCD_wait_flag>
 b30:	cf 91       	pop	r28
 b32:	08 95       	ret

Disassembly of section .text.LCD_wr_string:

00000db8 <LCD_wr_string>:

	}
	
}

void LCD_wr_string(volatile const char *s){
 db8:	cf 92       	push	r12
 dba:	df 92       	push	r13
 dbc:	ef 92       	push	r14
 dbe:	a8 2f       	mov	r26, r24
 dc0:	cb 01       	movw	r24, r22
	char c;
	while((c=*s++)){
 dc2:	04 c0       	rjmp	.+8      	; 0xdcc <LCD_wr_string+0x14>
		LCD_wr_char(c);
 dc4:	0e 94 56 05 	call	0xaac	; 0xaac <LCD_wr_char>
	
}

void LCD_wr_string(volatile const char *s){
	char c;
	while((c=*s++)){
 dc8:	ae 2d       	mov	r26, r14
 dca:	c6 01       	movw	r24, r12
 dcc:	6c 01       	movw	r12, r24
 dce:	ea 2e       	mov	r14, r26
 dd0:	2f ef       	ldi	r18, 0xFF	; 255
 dd2:	c2 1a       	sub	r12, r18
 dd4:	d2 0a       	sbc	r13, r18
 dd6:	e2 0a       	sbc	r14, r18
 dd8:	fc 01       	movw	r30, r24
 dda:	84 91       	lpm	r24, Z
 ddc:	a7 fd       	sbrc	r26, 7
 dde:	80 81       	ld	r24, Z
 de0:	81 11       	cpse	r24, r1
 de2:	f0 cf       	rjmp	.-32     	; 0xdc4 <LCD_wr_string+0xc>
		LCD_wr_char(c);
	}
}
 de4:	ef 90       	pop	r14
 de6:	df 90       	pop	r13
 de8:	cf 90       	pop	r12
 dea:	08 95       	ret

Disassembly of section .text.LCD_wr_instruction:

00000b34 <LCD_wr_instruction>:
	LCD_wr_instruction(LCD_Cmd_Home);
	LCD_wr_instruction(0b10000000);
	LCD_wr_string(a);
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
 b34:	cf 93       	push	r28
 b36:	c8 2f       	mov	r28, r24
 b38:	82 95       	swap	r24
 b3a:	8f 70       	andi	r24, 0x0F	; 15
 b3c:	8b bb       	out	0x1b, r24	; 27
 b3e:	65 e0       	ldi	r22, 0x05	; 5
 b40:	8b e3       	ldi	r24, 0x3B	; 59
 b42:	90 e0       	ldi	r25, 0x00	; 0
 b44:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b48:	66 e0       	ldi	r22, 0x06	; 6
 b4a:	8b e3       	ldi	r24, 0x3B	; 59
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b52:	64 e0       	ldi	r22, 0x04	; 4
 b54:	8b e3       	ldi	r24, 0x3B	; 59
 b56:	90 e0       	ldi	r25, 0x00	; 0
 b58:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 b5c:	83 ec       	ldi	r24, 0xC3	; 195
 b5e:	99 e0       	ldi	r25, 0x09	; 9
 b60:	01 97       	sbiw	r24, 0x01	; 1
 b62:	f1 f7       	brne	.-4      	; 0xb60 <LCD_wr_instruction+0x2c>
 b64:	00 c0       	rjmp	.+0      	; 0xb66 <LCD_wr_instruction+0x32>
 b66:	00 00       	nop
 b68:	64 e0       	ldi	r22, 0x04	; 4
 b6a:	8b e3       	ldi	r24, 0x3B	; 59
 b6c:	90 e0       	ldi	r25, 0x00	; 0
 b6e:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b72:	cf 70       	andi	r28, 0x0F	; 15
 b74:	cb bb       	out	0x1b, r28	; 27
 b76:	65 e0       	ldi	r22, 0x05	; 5
 b78:	8b e3       	ldi	r24, 0x3B	; 59
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b80:	66 e0       	ldi	r22, 0x06	; 6
 b82:	8b e3       	ldi	r24, 0x3B	; 59
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 b8a:	64 e0       	ldi	r22, 0x04	; 4
 b8c:	8b e3       	ldi	r24, 0x3B	; 59
 b8e:	90 e0       	ldi	r25, 0x00	; 0
 b90:	0e 94 2f 07 	call	0xe5e	; 0xe5e <saca_uno>
 b94:	83 ec       	ldi	r24, 0xC3	; 195
 b96:	99 e0       	ldi	r25, 0x09	; 9
 b98:	01 97       	sbiw	r24, 0x01	; 1
 b9a:	f1 f7       	brne	.-4      	; 0xb98 <LCD_wr_instruction+0x64>
 b9c:	00 c0       	rjmp	.+0      	; 0xb9e <LCD_wr_instruction+0x6a>
 b9e:	00 00       	nop
 ba0:	64 e0       	ldi	r22, 0x04	; 4
 ba2:	8b e3       	ldi	r24, 0x3B	; 59
 ba4:	90 e0       	ldi	r25, 0x00	; 0
 ba6:	0e 94 22 07 	call	0xe44	; 0xe44 <saca_cero>
 baa:	0e 94 b4 04 	call	0x968	; 0x968 <LCD_wait_flag>
 bae:	cf 91       	pop	r28
 bb0:	08 95       	ret

Disassembly of section .text.print_precio:

00000738 <print_precio>:
 738:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <precio>
 73c:	1f 92       	push	r1
 73e:	8f 93       	push	r24
 740:	8a eb       	ldi	r24, 0xBA	; 186
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	a0 e0       	ldi	r26, 0x00	; 0
 746:	af 93       	push	r26
 748:	9f 93       	push	r25
 74a:	8f 93       	push	r24
 74c:	80 e7       	ldi	r24, 0x70	; 112
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	9f 93       	push	r25
 752:	8f 93       	push	r24
 754:	0e 94 4b 06 	call	0xc96	; 0xc96 <sprintf>
 758:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 75c:	2d b7       	in	r18, 0x3d	; 61
 75e:	3e b7       	in	r19, 0x3e	; 62
 760:	29 5f       	subi	r18, 0xF9	; 249
 762:	3f 4f       	sbci	r19, 0xFF	; 255
 764:	0f b6       	in	r0, 0x3f	; 63
 766:	f8 94       	cli
 768:	3e bf       	out	0x3e, r19	; 62
 76a:	0f be       	out	0x3f, r0	; 63
 76c:	2d bf       	out	0x3d, r18	; 61
 76e:	8a 30       	cpi	r24, 0x0A	; 10
 770:	c8 f4       	brcc	.+50     	; 0x7a4 <print_precio+0x6c>
 772:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 776:	1f 92       	push	r1
 778:	8f 93       	push	r24
 77a:	89 ec       	ldi	r24, 0xC9	; 201
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	a0 e0       	ldi	r26, 0x00	; 0
 780:	af 93       	push	r26
 782:	9f 93       	push	r25
 784:	8f 93       	push	r24
 786:	80 e6       	ldi	r24, 0x60	; 96
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	9f 93       	push	r25
 78c:	8f 93       	push	r24
 78e:	0e 94 4b 06 	call	0xc96	; 0xc96 <sprintf>
 792:	8d b7       	in	r24, 0x3d	; 61
 794:	9e b7       	in	r25, 0x3e	; 62
 796:	07 96       	adiw	r24, 0x07	; 7
 798:	0f b6       	in	r0, 0x3f	; 63
 79a:	f8 94       	cli
 79c:	9e bf       	out	0x3e, r25	; 62
 79e:	0f be       	out	0x3f, r0	; 63
 7a0:	8d bf       	out	0x3d, r24	; 61
 7a2:	19 c0       	rjmp	.+50     	; 0x7d6 <print_precio+0x9e>
 7a4:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 7a8:	1f 92       	push	r1
 7aa:	8f 93       	push	r24
 7ac:	88 ed       	ldi	r24, 0xD8	; 216
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	a0 e0       	ldi	r26, 0x00	; 0
 7b2:	af 93       	push	r26
 7b4:	9f 93       	push	r25
 7b6:	8f 93       	push	r24
 7b8:	80 e6       	ldi	r24, 0x60	; 96
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	9f 93       	push	r25
 7be:	8f 93       	push	r24
 7c0:	0e 94 4b 06 	call	0xc96	; 0xc96 <sprintf>
 7c4:	2d b7       	in	r18, 0x3d	; 61
 7c6:	3e b7       	in	r19, 0x3e	; 62
 7c8:	29 5f       	subi	r18, 0xF9	; 249
 7ca:	3f 4f       	sbci	r19, 0xFF	; 255
 7cc:	0f b6       	in	r0, 0x3f	; 63
 7ce:	f8 94       	cli
 7d0:	3e bf       	out	0x3e, r19	; 62
 7d2:	0f be       	out	0x3f, r0	; 63
 7d4:	2d bf       	out	0x3d, r18	; 61
 7d6:	80 e8       	ldi	r24, 0x80	; 128
 7d8:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 7dc:	60 e7       	ldi	r22, 0x70	; 112
 7de:	70 e0       	ldi	r23, 0x00	; 0
 7e0:	80 e8       	ldi	r24, 0x80	; 128
 7e2:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_wr_string>
 7e6:	80 ec       	ldi	r24, 0xC0	; 192
 7e8:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 7ec:	60 e6       	ldi	r22, 0x60	; 96
 7ee:	70 e0       	ldi	r23, 0x00	; 0
 7f0:	80 e8       	ldi	r24, 0x80	; 128
 7f2:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_wr_string>
 7f6:	08 95       	ret

Disassembly of section .text.__vector_18:

000008b4 <__vector_18>:
 8b4:	1f 92       	push	r1
 8b6:	0f 92       	push	r0
 8b8:	0f b6       	in	r0, 0x3f	; 63
 8ba:	0f 92       	push	r0
 8bc:	11 24       	eor	r1, r1
 8be:	2f 93       	push	r18
 8c0:	3f 93       	push	r19
 8c2:	4f 93       	push	r20
 8c4:	5f 93       	push	r21
 8c6:	6f 93       	push	r22
 8c8:	7f 93       	push	r23
 8ca:	8f 93       	push	r24
 8cc:	9f 93       	push	r25
 8ce:	af 93       	push	r26
 8d0:	bf 93       	push	r27
 8d2:	ef 93       	push	r30
 8d4:	ff 93       	push	r31
 8d6:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <pago>
 8da:	81 30       	cpi	r24, 0x01	; 1
 8dc:	a1 f5       	brne	.+104    	; 0x946 <__vector_18+0x92>
 8de:	86 b3       	in	r24, 0x16	; 22
 8e0:	82 95       	swap	r24
 8e2:	8f 70       	andi	r24, 0x0F	; 15
 8e4:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <puerto>
 8e8:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <puerto>
 8ec:	81 30       	cpi	r24, 0x01	; 1
 8ee:	29 f4       	brne	.+10     	; 0x8fa <__vector_18+0x46>
 8f0:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 8f4:	8f 5f       	subi	r24, 0xFF	; 255
 8f6:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <cont>
 8fa:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <puerto>
 8fe:	82 30       	cpi	r24, 0x02	; 2
 900:	29 f4       	brne	.+10     	; 0x90c <__vector_18+0x58>
 902:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 906:	8e 5f       	subi	r24, 0xFE	; 254
 908:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <cont>
 90c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <puerto>
 910:	83 30       	cpi	r24, 0x03	; 3
 912:	29 f4       	brne	.+10     	; 0x91e <__vector_18+0x6a>
 914:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 918:	8b 5f       	subi	r24, 0xFB	; 251
 91a:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <cont>
 91e:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <puerto>
 922:	84 30       	cpi	r24, 0x04	; 4
 924:	29 f4       	brne	.+10     	; 0x930 <__vector_18+0x7c>
 926:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 92a:	86 5f       	subi	r24, 0xF6	; 246
 92c:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <cont>
 930:	b2 9b       	sbis	0x16, 2	; 22
 932:	fe cf       	rjmp	.-4      	; 0x930 <__vector_18+0x7c>
 934:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <puerto>
 938:	85 30       	cpi	r24, 0x05	; 5
 93a:	28 f4       	brcc	.+10     	; 0x946 <__vector_18+0x92>
 93c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <puerto>
 940:	81 11       	cpse	r24, r1
 942:	0e 94 9c 03 	call	0x738	; 0x738 <print_precio>
 946:	ff 91       	pop	r31
 948:	ef 91       	pop	r30
 94a:	bf 91       	pop	r27
 94c:	af 91       	pop	r26
 94e:	9f 91       	pop	r25
 950:	8f 91       	pop	r24
 952:	7f 91       	pop	r23
 954:	6f 91       	pop	r22
 956:	5f 91       	pop	r21
 958:	4f 91       	pop	r20
 95a:	3f 91       	pop	r19
 95c:	2f 91       	pop	r18
 95e:	0f 90       	pop	r0
 960:	0f be       	out	0x3f, r0	; 63
 962:	0f 90       	pop	r0
 964:	1f 90       	pop	r1
 966:	18 95       	reti

Disassembly of section .text.LCD_init:

00000c2a <LCD_init>:

void LCD_init(void){
	DDRLCD=(15<<0)|(1<<RS)|(1<<RW)|(1<<E); //DDRLCD=DDRLCD|(0B01111111)
 c2a:	8f e7       	ldi	r24, 0x7F	; 127
 c2c:	8a bb       	out	0x1a, r24	; 26
 c2e:	85 ea       	ldi	r24, 0xA5	; 165
 c30:	9e e0       	ldi	r25, 0x0E	; 14
 c32:	01 97       	sbiw	r24, 0x01	; 1
 c34:	f1 f7       	brne	.-4      	; 0xc32 <LCD_init+0x8>
 c36:	00 c0       	rjmp	.+0      	; 0xc38 <LCD_init+0xe>
 c38:	00 00       	nop
	_delay_ms(15);
	LCD_wr_inst_ini(0b00000011);
 c3a:	83 e0       	ldi	r24, 0x03	; 3
 c3c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <LCD_wr_inst_ini>
 c40:	81 ee       	ldi	r24, 0xE1	; 225
 c42:	94 e0       	ldi	r25, 0x04	; 4
 c44:	01 97       	sbiw	r24, 0x01	; 1
 c46:	f1 f7       	brne	.-4      	; 0xc44 <LCD_init+0x1a>
 c48:	00 c0       	rjmp	.+0      	; 0xc4a <LCD_init+0x20>
 c4a:	00 00       	nop
	_delay_ms(5);
	LCD_wr_inst_ini(0b00000011);
 c4c:	83 e0       	ldi	r24, 0x03	; 3
 c4e:	0e 94 6e 06 	call	0xcdc	; 0xcdc <LCD_wr_inst_ini>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 c52:	91 e2       	ldi	r25, 0x21	; 33
 c54:	9a 95       	dec	r25
 c56:	f1 f7       	brne	.-4      	; 0xc54 <LCD_init+0x2a>
 c58:	00 00       	nop
	_delay_us(100);
	LCD_wr_inst_ini(0b00000011);
 c5a:	83 e0       	ldi	r24, 0x03	; 3
 c5c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <LCD_wr_inst_ini>
 c60:	81 e2       	ldi	r24, 0x21	; 33
 c62:	8a 95       	dec	r24
 c64:	f1 f7       	brne	.-4      	; 0xc62 <LCD_init+0x38>
 c66:	00 00       	nop
	_delay_us(100);
	LCD_wr_inst_ini(0b00000010);
 c68:	82 e0       	ldi	r24, 0x02	; 2
 c6a:	0e 94 6e 06 	call	0xcdc	; 0xcdc <LCD_wr_inst_ini>
 c6e:	91 e2       	ldi	r25, 0x21	; 33
 c70:	9a 95       	dec	r25
 c72:	f1 f7       	brne	.-4      	; 0xc70 <LCD_init+0x46>
 c74:	00 00       	nop
	_delay_us(100);
	LCD_wr_instruction(LCD_Cmd_Func2Lin); //4 Bits, n?mero de l?neas y tipo de letra
 c76:	88 e2       	ldi	r24, 0x28	; 40
 c78:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Off); //apaga el display
 c7c:	88 e0       	ldi	r24, 0x08	; 8
 c7e:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_Clear); //limpia el display
 c82:	81 e0       	ldi	r24, 0x01	; 1
 c84:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_ModeDnS); //Entry mode set ID S
 c88:	86 e0       	ldi	r24, 0x06	; 6
 c8a:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
	LCD_wr_instruction(LCD_Cmd_OnsCsB); //Enciende el display
 c8e:	8c e0       	ldi	r24, 0x0C	; 12
 c90:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 c94:	08 95       	ret

Disassembly of section .text.start:

00000e1e <start>:
	}
}

void start(){

	pago = 0;
 e1e:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <pago>

	sei();
 e22:	78 94       	sei
	GIFR = 0xE0;
 e24:	80 ee       	ldi	r24, 0xE0	; 224
 e26:	8a bf       	out	0x3a, r24	; 58
	MCUCR = 0x02;
 e28:	82 e0       	ldi	r24, 0x02	; 2
 e2a:	85 bf       	out	0x35, r24	; 53
	GICR = 0x20;
 e2c:	90 e2       	ldi	r25, 0x20	; 32
 e2e:	9b bf       	out	0x3b, r25	; 59

	DDRX = 0x0F;
 e30:	9f e0       	ldi	r25, 0x0F	; 15
 e32:	94 bb       	out	0x14, r25	; 20
	PORTX = 0xFF;
 e34:	9f ef       	ldi	r25, 0xFF	; 255
 e36:	95 bb       	out	0x15, r25	; 21
	
	DDRB = 0b00000010;
 e38:	87 bb       	out	0x17, r24	; 23
	PORTB= 0b11111101;
 e3a:	8d ef       	ldi	r24, 0xFD	; 253
 e3c:	88 bb       	out	0x18, r24	; 24

	LCD_init();
 e3e:	0e 94 15 06 	call	0xc2a	; 0xc2a <LCD_init>
 e42:	08 95       	ret

Disassembly of section .text.main:

0000055a <main>:
	LCD_wr_instruction(LCD_Cmd_Home);
	LCD_wr_instruction(0b10000000);
	LCD_wr_string(a);
	LCD_wr_instruction(0b11000000);
	LCD_wr_string(b);
}
 55a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <start>
 55e:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <pago>
 562:	81 e0       	ldi	r24, 0x01	; 1
 564:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 568:	80 e8       	ldi	r24, 0x80	; 128
 56a:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 56e:	20 e1       	ldi	r18, 0x10	; 16
 570:	30 e0       	ldi	r19, 0x00	; 0
 572:	46 ee       	ldi	r20, 0xE6	; 230
 574:	50 e0       	ldi	r21, 0x00	; 0
 576:	60 e0       	ldi	r22, 0x00	; 0
 578:	80 e7       	ldi	r24, 0x70	; 112
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	0e 94 f6 06 	call	0xdec	; 0xdec <memcpy>
 580:	80 e7       	ldi	r24, 0x70	; 112
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	6c 01       	movw	r12, r24
 586:	20 e8       	ldi	r18, 0x80	; 128
 588:	e2 2e       	mov	r14, r18
 58a:	8e 2d       	mov	r24, r14
 58c:	b6 01       	movw	r22, r12
 58e:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_wr_string>
 592:	8f e0       	ldi	r24, 0x0F	; 15
 594:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 598:	80 ec       	ldi	r24, 0xC0	; 192
 59a:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 59e:	0e 94 06 05 	call	0xa0c	; 0xa0c <hastaTecla>
 5a2:	c8 2f       	mov	r28, r24
 5a4:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <px>
 5a8:	87 e0       	ldi	r24, 0x07	; 7
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	82 1b       	sub	r24, r18
 5ae:	91 09       	sbc	r25, r1
 5b0:	40 91 a6 00 	lds	r20, 0x00A6	; 0x8000a6 <py>
 5b4:	23 e0       	ldi	r18, 0x03	; 3
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	24 1b       	sub	r18, r20
 5ba:	31 09       	sbc	r19, r1
 5bc:	88 0f       	add	r24, r24
 5be:	99 1f       	adc	r25, r25
 5c0:	88 0f       	add	r24, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	80 58       	subi	r24, 0x80	; 128
 5c6:	9f 4f       	sbci	r25, 0xFF	; 255
 5c8:	fc 01       	movw	r30, r24
 5ca:	e2 0f       	add	r30, r18
 5cc:	f3 1f       	adc	r31, r19
 5ce:	80 81       	ld	r24, Z
 5d0:	96 ef       	ldi	r25, 0xF6	; 246
 5d2:	9c 0f       	add	r25, r28
 5d4:	92 30       	cpi	r25, 0x02	; 2
 5d6:	18 f7       	brcc	.-58     	; 0x59e <main+0x44>
 5d8:	0e 94 56 05 	call	0xaac	; 0xaac <LCD_wr_char>
 5dc:	c0 93 a5 00 	sts	0x00A5, r28	; 0x8000a5 <a>
 5e0:	81 ec       	ldi	r24, 0xC1	; 193
 5e2:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 5e6:	0e 94 06 05 	call	0xa0c	; 0xa0c <hastaTecla>
 5ea:	c8 2f       	mov	r28, r24
 5ec:	20 91 a7 00 	lds	r18, 0x00A7	; 0x8000a7 <px>
 5f0:	87 e0       	ldi	r24, 0x07	; 7
 5f2:	90 e0       	ldi	r25, 0x00	; 0
 5f4:	82 1b       	sub	r24, r18
 5f6:	91 09       	sbc	r25, r1
 5f8:	40 91 a6 00 	lds	r20, 0x00A6	; 0x8000a6 <py>
 5fc:	23 e0       	ldi	r18, 0x03	; 3
 5fe:	30 e0       	ldi	r19, 0x00	; 0
 600:	24 1b       	sub	r18, r20
 602:	31 09       	sbc	r19, r1
 604:	88 0f       	add	r24, r24
 606:	99 1f       	adc	r25, r25
 608:	88 0f       	add	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	80 58       	subi	r24, 0x80	; 128
 60e:	9f 4f       	sbci	r25, 0xFF	; 255
 610:	fc 01       	movw	r30, r24
 612:	e2 0f       	add	r30, r18
 614:	f3 1f       	adc	r31, r19
 616:	80 81       	ld	r24, Z
 618:	9f ef       	ldi	r25, 0xFF	; 255
 61a:	9c 0f       	add	r25, r28
 61c:	92 30       	cpi	r25, 0x02	; 2
 61e:	18 f7       	brcc	.-58     	; 0x5e6 <main+0x8c>
 620:	0e 94 56 05 	call	0xaac	; 0xaac <LCD_wr_char>
 624:	c0 93 a4 00 	sts	0x00A4, r28	; 0x8000a4 <b>
 628:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <a>
 62c:	8a 30       	cpi	r24, 0x0A	; 10
 62e:	61 f4       	brne	.+24     	; 0x648 <main+0xee>
 630:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <b>
 634:	81 30       	cpi	r24, 0x01	; 1
 636:	21 f4       	brne	.+8      	; 0x640 <main+0xe6>
 638:	8b e0       	ldi	r24, 0x0B	; 11
 63a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <precio>
 63e:	0f c0       	rjmp	.+30     	; 0x65e <main+0x104>
 640:	8f e0       	ldi	r24, 0x0F	; 15
 642:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <precio>
 646:	0b c0       	rjmp	.+22     	; 0x65e <main+0x104>
 648:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <b>
 64c:	81 30       	cpi	r24, 0x01	; 1
 64e:	21 f4       	brne	.+8      	; 0x658 <main+0xfe>
 650:	81 e1       	ldi	r24, 0x11	; 17
 652:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <precio>
 656:	03 c0       	rjmp	.+6      	; 0x65e <main+0x104>
 658:	80 e2       	ldi	r24, 0x20	; 32
 65a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <precio>
 65e:	8f e9       	ldi	r24, 0x9F	; 159
 660:	96 e8       	ldi	r25, 0x86	; 134
 662:	21 e0       	ldi	r18, 0x01	; 1
 664:	81 50       	subi	r24, 0x01	; 1
 666:	90 40       	sbci	r25, 0x00	; 0
 668:	20 40       	sbci	r18, 0x00	; 0
 66a:	e1 f7       	brne	.-8      	; 0x664 <main+0x10a>
 66c:	00 c0       	rjmp	.+0      	; 0x66e <main+0x114>
 66e:	00 00       	nop
 670:	81 e0       	ldi	r24, 0x01	; 1
 672:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 676:	8c e0       	ldi	r24, 0x0C	; 12
 678:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 67c:	0e 94 9c 03 	call	0x738	; 0x738 <print_precio>
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <pago>
 686:	90 91 a3 00 	lds	r25, 0x00A3	; 0x8000a3 <cont>
 68a:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <precio>
 68e:	98 17       	cp	r25, r24
 690:	d0 f3       	brcs	.-12     	; 0x686 <main+0x12c>
 692:	8f e9       	ldi	r24, 0x9F	; 159
 694:	96 e8       	ldi	r25, 0x86	; 134
 696:	21 e0       	ldi	r18, 0x01	; 1
 698:	81 50       	subi	r24, 0x01	; 1
 69a:	90 40       	sbci	r25, 0x00	; 0
 69c:	20 40       	sbci	r18, 0x00	; 0
 69e:	e1 f7       	brne	.-8      	; 0x698 <main+0x13e>
 6a0:	00 c0       	rjmp	.+0      	; 0x6a2 <main+0x148>
 6a2:	00 00       	nop
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 6aa:	2e e0       	ldi	r18, 0x0E	; 14
 6ac:	30 e0       	ldi	r19, 0x00	; 0
 6ae:	46 ef       	ldi	r20, 0xF6	; 246
 6b0:	50 e0       	ldi	r21, 0x00	; 0
 6b2:	60 e0       	ldi	r22, 0x00	; 0
 6b4:	80 e7       	ldi	r24, 0x70	; 112
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 f6 06 	call	0xdec	; 0xdec <memcpy>
 6bc:	80 91 a3 00 	lds	r24, 0x00A3	; 0x8000a3 <cont>
 6c0:	20 91 a2 00 	lds	r18, 0x00A2	; 0x8000a2 <precio>
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	82 1b       	sub	r24, r18
 6c8:	91 09       	sbc	r25, r1
 6ca:	9f 93       	push	r25
 6cc:	8f 93       	push	r24
 6ce:	84 e0       	ldi	r24, 0x04	; 4
 6d0:	91 e0       	ldi	r25, 0x01	; 1
 6d2:	a0 e0       	ldi	r26, 0x00	; 0
 6d4:	af 93       	push	r26
 6d6:	9f 93       	push	r25
 6d8:	8f 93       	push	r24
 6da:	c0 e6       	ldi	r28, 0x60	; 96
 6dc:	d0 e0       	ldi	r29, 0x00	; 0
 6de:	df 93       	push	r29
 6e0:	cf 93       	push	r28
 6e2:	0e 94 4b 06 	call	0xc96	; 0xc96 <sprintf>
 6e6:	80 e8       	ldi	r24, 0x80	; 128
 6e8:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 6ec:	8e 2d       	mov	r24, r14
 6ee:	b6 01       	movw	r22, r12
 6f0:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_wr_string>
 6f4:	80 ec       	ldi	r24, 0xC0	; 192
 6f6:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 6fa:	be 01       	movw	r22, r28
 6fc:	80 e8       	ldi	r24, 0x80	; 128
 6fe:	0e 94 dc 06 	call	0xdb8	; 0xdb8 <LCD_wr_string>
 702:	2f ed       	ldi	r18, 0xDF	; 223
 704:	83 e9       	ldi	r24, 0x93	; 147
 706:	94 e0       	ldi	r25, 0x04	; 4
 708:	21 50       	subi	r18, 0x01	; 1
 70a:	80 40       	sbci	r24, 0x00	; 0
 70c:	90 40       	sbci	r25, 0x00	; 0
 70e:	e1 f7       	brne	.-8      	; 0x708 <main+0x1ae>
 710:	00 c0       	rjmp	.+0      	; 0x712 <main+0x1b8>
 712:	00 00       	nop
 714:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <precio>
 718:	10 92 a3 00 	sts	0x00A3, r1	; 0x8000a3 <cont>
 71c:	10 92 a1 00 	sts	0x00A1, r1	; 0x8000a1 <pago>
 720:	81 e0       	ldi	r24, 0x01	; 1
 722:	0e 94 9a 05 	call	0xb34	; 0xb34 <LCD_wr_instruction>
 726:	8d b7       	in	r24, 0x3d	; 61
 728:	9e b7       	in	r25, 0x3e	; 62
 72a:	07 96       	adiw	r24, 0x07	; 7
 72c:	0f b6       	in	r0, 0x3f	; 63
 72e:	f8 94       	cli
 730:	9e bf       	out	0x3e, r25	; 62
 732:	0f be       	out	0x3f, r0	; 63
 734:	8d bf       	out	0x3d, r24	; 61
 736:	13 cf       	rjmp	.-474    	; 0x55e <main+0x4>

Disassembly of section .text.avrlibc:

00000dec <memcpy>:
 dec:	cf 92       	push	r12
 dee:	df 92       	push	r13
 df0:	ef 92       	push	r14
 df2:	dc 01       	movw	r26, r24
 df4:	6a 01       	movw	r12, r20
 df6:	e6 2e       	mov	r14, r22
 df8:	28 0f       	add	r18, r24
 dfa:	39 1f       	adc	r19, r25
 dfc:	a2 17       	cp	r26, r18
 dfe:	b3 07       	cpc	r27, r19
 e00:	51 f0       	breq	.+20     	; 0xe16 <memcpy+0x2a>
 e02:	f6 01       	movw	r30, r12
 e04:	44 91       	lpm	r20, Z
 e06:	e7 fc       	sbrc	r14, 7
 e08:	40 81       	ld	r20, Z
 e0a:	4d 93       	st	X+, r20
 e0c:	4f ef       	ldi	r20, 0xFF	; 255
 e0e:	c4 1a       	sub	r12, r20
 e10:	d4 0a       	sbc	r13, r20
 e12:	e4 0a       	sbc	r14, r20
 e14:	f3 cf       	rjmp	.-26     	; 0xdfc <memcpy+0x10>
 e16:	ef 90       	pop	r14
 e18:	df 90       	pop	r13
 e1a:	cf 90       	pop	r12
 e1c:	08 95       	ret

Disassembly of section .text.avrlibc:

00000c96 <sprintf>:
 c96:	af e0       	ldi	r26, 0x0F	; 15
 c98:	b0 e0       	ldi	r27, 0x00	; 0
 c9a:	e1 e5       	ldi	r30, 0x51	; 81
 c9c:	f6 e0       	ldi	r31, 0x06	; 6
 c9e:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__prologue_saves__+0x1c>
 ca2:	0e 89       	ldd	r16, Y+22	; 0x16
 ca4:	1f 89       	ldd	r17, Y+23	; 0x17
 ca6:	86 e0       	ldi	r24, 0x06	; 6
 ca8:	8d 83       	std	Y+5, r24	; 0x05
 caa:	1a 83       	std	Y+2, r17	; 0x02
 cac:	09 83       	std	Y+1, r16	; 0x01
 cae:	8f ef       	ldi	r24, 0xFF	; 255
 cb0:	9f e7       	ldi	r25, 0x7F	; 127
 cb2:	9f 83       	std	Y+7, r25	; 0x07
 cb4:	8e 83       	std	Y+6, r24	; 0x06
 cb6:	9e 01       	movw	r18, r28
 cb8:	25 5e       	subi	r18, 0xE5	; 229
 cba:	3f 4f       	sbci	r19, 0xFF	; 255
 cbc:	48 8d       	ldd	r20, Y+24	; 0x18
 cbe:	59 8d       	ldd	r21, Y+25	; 0x19
 cc0:	6a 8d       	ldd	r22, Y+26	; 0x1a
 cc2:	ce 01       	movw	r24, r28
 cc4:	01 96       	adiw	r24, 0x01	; 1
 cc6:	0e 94 89 00 	call	0x112	; 0x112 <vfprintf>
 cca:	e8 85       	ldd	r30, Y+8	; 0x08
 ccc:	f9 85       	ldd	r31, Y+9	; 0x09
 cce:	e0 0f       	add	r30, r16
 cd0:	f1 1f       	adc	r31, r17
 cd2:	10 82       	st	Z, r1
 cd4:	2f 96       	adiw	r28, 0x0f	; 15
 cd6:	e4 e0       	ldi	r30, 0x04	; 4
 cd8:	0c 94 cf 06 	jmp	0xd9e	; 0xd9e <__epilogue_restores__+0x1c>

Disassembly of section .text.avrlibc:

00000112 <vfprintf>:
 112:	2f 92       	push	r2
 114:	3f 92       	push	r3
 116:	4f 92       	push	r4
 118:	6f 92       	push	r6
 11a:	7f 92       	push	r7
 11c:	8f 92       	push	r8
 11e:	9f 92       	push	r9
 120:	af 92       	push	r10
 122:	bf 92       	push	r11
 124:	cf 92       	push	r12
 126:	df 92       	push	r13
 128:	ef 92       	push	r14
 12a:	ff 92       	push	r15
 12c:	0f 93       	push	r16
 12e:	1f 93       	push	r17
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
 138:	62 97       	sbiw	r28, 0x12	; 18
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	f8 94       	cli
 13e:	de bf       	out	0x3e, r29	; 62
 140:	0f be       	out	0x3f, r0	; 63
 142:	cd bf       	out	0x3d, r28	; 61
 144:	6c 01       	movw	r12, r24
 146:	3a 01       	movw	r6, r20
 148:	86 2e       	mov	r8, r22
 14a:	79 01       	movw	r14, r18
 14c:	fc 01       	movw	r30, r24
 14e:	10 86       	std	Z+8, r1	; 0x08
 150:	17 82       	std	Z+7, r1	; 0x07
 152:	84 81       	ldd	r24, Z+4	; 0x04
 154:	81 ff       	sbrs	r24, 1
 156:	e7 c1       	rjmp	.+974    	; 0x526 <__stack+0xc7>
 158:	9e 01       	movw	r18, r28
 15a:	2f 5f       	subi	r18, 0xFF	; 255
 15c:	3f 4f       	sbci	r19, 0xFF	; 255
 15e:	3d 87       	std	Y+13, r19	; 0x0d
 160:	2c 87       	std	Y+12, r18	; 0x0c
 162:	c9 01       	movw	r24, r18
 164:	a0 e8       	ldi	r26, 0x80	; 128
 166:	88 8b       	std	Y+16, r24	; 0x10
 168:	99 8b       	std	Y+17, r25	; 0x11
 16a:	aa 8b       	std	Y+18, r26	; 0x12
 16c:	9f e3       	ldi	r25, 0x3F	; 63
 16e:	99 2e       	mov	r9, r25
 170:	f3 01       	movw	r30, r6
 172:	84 91       	lpm	r24, Z
 174:	87 fc       	sbrc	r8, 7
 176:	80 81       	ld	r24, Z
 178:	88 23       	and	r24, r24
 17a:	09 f4       	brne	.+2      	; 0x17e <vfprintf+0x6c>
 17c:	d0 c1       	rjmp	.+928    	; 0x51e <__stack+0xbf>
 17e:	48 2d       	mov	r20, r8
 180:	93 01       	movw	r18, r6
 182:	2f 5f       	subi	r18, 0xFF	; 255
 184:	3f 4f       	sbci	r19, 0xFF	; 255
 186:	4f 4f       	sbci	r20, 0xFF	; 255
 188:	85 32       	cpi	r24, 0x25	; 37
 18a:	19 f0       	breq	.+6      	; 0x192 <vfprintf+0x80>
 18c:	39 01       	movw	r6, r18
 18e:	84 2e       	mov	r8, r20
 190:	0a c0       	rjmp	.+20     	; 0x1a6 <vfprintf+0x94>
 192:	f9 01       	movw	r30, r18
 194:	84 91       	lpm	r24, Z
 196:	47 fd       	sbrc	r20, 7
 198:	80 81       	ld	r24, Z
 19a:	92 e0       	ldi	r25, 0x02	; 2
 19c:	69 0e       	add	r6, r25
 19e:	71 1c       	adc	r7, r1
 1a0:	81 1c       	adc	r8, r1
 1a2:	85 32       	cpi	r24, 0x25	; 37
 1a4:	29 f4       	brne	.+10     	; 0x1b0 <vfprintf+0x9e>
 1a6:	b6 01       	movw	r22, r12
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 1ae:	e0 cf       	rjmp	.-64     	; 0x170 <vfprintf+0x5e>
 1b0:	b1 2c       	mov	r11, r1
 1b2:	00 e0       	ldi	r16, 0x00	; 0
 1b4:	10 e0       	ldi	r17, 0x00	; 0
 1b6:	10 32       	cpi	r17, 0x20	; 32
 1b8:	a0 f4       	brcc	.+40     	; 0x1e2 <vfprintf+0xd0>
 1ba:	8b 32       	cpi	r24, 0x2B	; 43
 1bc:	69 f0       	breq	.+26     	; 0x1d8 <vfprintf+0xc6>
 1be:	30 f4       	brcc	.+12     	; 0x1cc <vfprintf+0xba>
 1c0:	80 32       	cpi	r24, 0x20	; 32
 1c2:	59 f0       	breq	.+22     	; 0x1da <vfprintf+0xc8>
 1c4:	83 32       	cpi	r24, 0x23	; 35
 1c6:	69 f4       	brne	.+26     	; 0x1e2 <vfprintf+0xd0>
 1c8:	10 61       	ori	r17, 0x10	; 16
 1ca:	2c c0       	rjmp	.+88     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 1cc:	8d 32       	cpi	r24, 0x2D	; 45
 1ce:	39 f0       	breq	.+14     	; 0x1de <vfprintf+0xcc>
 1d0:	80 33       	cpi	r24, 0x30	; 48
 1d2:	39 f4       	brne	.+14     	; 0x1e2 <vfprintf+0xd0>
 1d4:	11 60       	ori	r17, 0x01	; 1
 1d6:	26 c0       	rjmp	.+76     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 1d8:	12 60       	ori	r17, 0x02	; 2
 1da:	14 60       	ori	r17, 0x04	; 4
 1dc:	23 c0       	rjmp	.+70     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 1de:	18 60       	ori	r17, 0x08	; 8
 1e0:	21 c0       	rjmp	.+66     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 1e2:	17 fd       	sbrc	r17, 7
 1e4:	29 c0       	rjmp	.+82     	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 1e6:	90 ed       	ldi	r25, 0xD0	; 208
 1e8:	98 0f       	add	r25, r24
 1ea:	9a 30       	cpi	r25, 0x0A	; 10
 1ec:	78 f4       	brcc	.+30     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 1ee:	16 ff       	sbrs	r17, 6
 1f0:	06 c0       	rjmp	.+12     	; 0x1fe <vfprintf+0xec>
 1f2:	aa e0       	ldi	r26, 0x0A	; 10
 1f4:	ba 9e       	mul	r11, r26
 1f6:	90 0d       	add	r25, r0
 1f8:	11 24       	eor	r1, r1
 1fa:	b9 2e       	mov	r11, r25
 1fc:	13 c0       	rjmp	.+38     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 1fe:	ea e0       	ldi	r30, 0x0A	; 10
 200:	0e 9f       	mul	r16, r30
 202:	90 0d       	add	r25, r0
 204:	11 24       	eor	r1, r1
 206:	09 2f       	mov	r16, r25
 208:	10 62       	ori	r17, 0x20	; 32
 20a:	0c c0       	rjmp	.+24     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 20c:	8e 32       	cpi	r24, 0x2E	; 46
 20e:	21 f4       	brne	.+8      	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>
 210:	16 fd       	sbrc	r17, 6
 212:	85 c1       	rjmp	.+778    	; 0x51e <__stack+0xbf>
 214:	10 64       	ori	r17, 0x40	; 64
 216:	06 c0       	rjmp	.+12     	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 218:	8c 36       	cpi	r24, 0x6C	; 108
 21a:	11 f4       	brne	.+4      	; 0x220 <__EEPROM_REGION_LENGTH__+0x20>
 21c:	10 68       	ori	r17, 0x80	; 128
 21e:	02 c0       	rjmp	.+4      	; 0x224 <__EEPROM_REGION_LENGTH__+0x24>
 220:	88 36       	cpi	r24, 0x68	; 104
 222:	51 f4       	brne	.+20     	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 224:	f3 01       	movw	r30, r6
 226:	84 91       	lpm	r24, Z
 228:	87 fc       	sbrc	r8, 7
 22a:	80 81       	ld	r24, Z
 22c:	ff ef       	ldi	r31, 0xFF	; 255
 22e:	6f 1a       	sub	r6, r31
 230:	7f 0a       	sbc	r7, r31
 232:	8f 0a       	sbc	r8, r31
 234:	81 11       	cpse	r24, r1
 236:	bf cf       	rjmp	.-130    	; 0x1b6 <vfprintf+0xa4>
 238:	98 2f       	mov	r25, r24
 23a:	9f 7d       	andi	r25, 0xDF	; 223
 23c:	95 54       	subi	r25, 0x45	; 69
 23e:	93 30       	cpi	r25, 0x03	; 3
 240:	28 f4       	brcc	.+10     	; 0x24c <__EEPROM_REGION_LENGTH__+0x4c>
 242:	24 e0       	ldi	r18, 0x04	; 4
 244:	e2 0e       	add	r14, r18
 246:	f1 1c       	adc	r15, r1
 248:	99 82       	std	Y+1, r9	; 0x01
 24a:	0f c0       	rjmp	.+30     	; 0x26a <__EEPROM_REGION_LENGTH__+0x6a>
 24c:	83 36       	cpi	r24, 0x63	; 99
 24e:	31 f0       	breq	.+12     	; 0x25c <__EEPROM_REGION_LENGTH__+0x5c>
 250:	83 37       	cpi	r24, 0x73	; 115
 252:	91 f0       	breq	.+36     	; 0x278 <__EEPROM_REGION_LENGTH__+0x78>
 254:	83 35       	cpi	r24, 0x53	; 83
 256:	09 f0       	breq	.+2      	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
 258:	63 c0       	rjmp	.+198    	; 0x320 <__EEPROM_REGION_LENGTH__+0x120>
 25a:	27 c0       	rjmp	.+78     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 25c:	f7 01       	movw	r30, r14
 25e:	80 81       	ld	r24, Z
 260:	89 83       	std	Y+1, r24	; 0x01
 262:	97 01       	movw	r18, r14
 264:	2e 5f       	subi	r18, 0xFE	; 254
 266:	3f 4f       	sbci	r19, 0xFF	; 255
 268:	79 01       	movw	r14, r18
 26a:	28 88       	ldd	r2, Y+16	; 0x10
 26c:	39 88       	ldd	r3, Y+17	; 0x11
 26e:	4a 88       	ldd	r4, Y+18	; 0x12
 270:	aa 24       	eor	r10, r10
 272:	a3 94       	inc	r10
 274:	b1 2c       	mov	r11, r1
 276:	17 c0       	rjmp	.+46     	; 0x2a6 <__EEPROM_REGION_LENGTH__+0xa6>
 278:	a7 01       	movw	r20, r14
 27a:	4d 5f       	subi	r20, 0xFD	; 253
 27c:	5f 4f       	sbci	r21, 0xFF	; 255
 27e:	5f 87       	std	Y+15, r21	; 0x0f
 280:	4e 87       	std	Y+14, r20	; 0x0e
 282:	f7 01       	movw	r30, r14
 284:	20 80       	ld	r2, Z
 286:	31 80       	ldd	r3, Z+1	; 0x01
 288:	42 80       	ldd	r4, Z+2	; 0x02
 28a:	16 ff       	sbrs	r17, 6
 28c:	03 c0       	rjmp	.+6      	; 0x294 <__EEPROM_REGION_LENGTH__+0x94>
 28e:	4b 2d       	mov	r20, r11
 290:	50 e0       	ldi	r21, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <__EEPROM_REGION_LENGTH__+0x98>
 294:	4f ef       	ldi	r20, 0xFF	; 255
 296:	5f ef       	ldi	r21, 0xFF	; 255
 298:	84 2d       	mov	r24, r4
 29a:	b1 01       	movw	r22, r2
 29c:	0e 94 a6 06 	call	0xd4c	; 0xd4c <strnlen>
 2a0:	5c 01       	movw	r10, r24
 2a2:	ee 84       	ldd	r14, Y+14	; 0x0e
 2a4:	ff 84       	ldd	r15, Y+15	; 0x0f
 2a6:	1f 77       	andi	r17, 0x7F	; 127
 2a8:	18 c0       	rjmp	.+48     	; 0x2da <__EEPROM_REGION_LENGTH__+0xda>
 2aa:	97 01       	movw	r18, r14
 2ac:	2d 5f       	subi	r18, 0xFD	; 253
 2ae:	3f 4f       	sbci	r19, 0xFF	; 255
 2b0:	3f 87       	std	Y+15, r19	; 0x0f
 2b2:	2e 87       	std	Y+14, r18	; 0x0e
 2b4:	f7 01       	movw	r30, r14
 2b6:	20 80       	ld	r2, Z
 2b8:	31 80       	ldd	r3, Z+1	; 0x01
 2ba:	42 80       	ldd	r4, Z+2	; 0x02
 2bc:	16 ff       	sbrs	r17, 6
 2be:	03 c0       	rjmp	.+6      	; 0x2c6 <__EEPROM_REGION_LENGTH__+0xc6>
 2c0:	4b 2d       	mov	r20, r11
 2c2:	50 e0       	ldi	r21, 0x00	; 0
 2c4:	02 c0       	rjmp	.+4      	; 0x2ca <__EEPROM_REGION_LENGTH__+0xca>
 2c6:	4f ef       	ldi	r20, 0xFF	; 255
 2c8:	5f ef       	ldi	r21, 0xFF	; 255
 2ca:	84 2d       	mov	r24, r4
 2cc:	b1 01       	movw	r22, r2
 2ce:	0e 94 a6 06 	call	0xd4c	; 0xd4c <strnlen>
 2d2:	5c 01       	movw	r10, r24
 2d4:	10 68       	ori	r17, 0x80	; 128
 2d6:	ee 84       	ldd	r14, Y+14	; 0x0e
 2d8:	ff 84       	ldd	r15, Y+15	; 0x0f
 2da:	13 fd       	sbrc	r17, 3
 2dc:	1d c0       	rjmp	.+58     	; 0x318 <__EEPROM_REGION_LENGTH__+0x118>
 2de:	80 2f       	mov	r24, r16
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	a8 16       	cp	r10, r24
 2e4:	b9 06       	cpc	r11, r25
 2e6:	c0 f4       	brcc	.+48     	; 0x318 <__EEPROM_REGION_LENGTH__+0x118>
 2e8:	b6 01       	movw	r22, r12
 2ea:	80 e2       	ldi	r24, 0x20	; 32
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 2f2:	01 50       	subi	r16, 0x01	; 1
 2f4:	f4 cf       	rjmp	.-24     	; 0x2de <__EEPROM_REGION_LENGTH__+0xde>
 2f6:	f1 01       	movw	r30, r2
 2f8:	84 91       	lpm	r24, Z
 2fa:	47 fc       	sbrc	r4, 7
 2fc:	80 81       	ld	r24, Z
 2fe:	ff ef       	ldi	r31, 0xFF	; 255
 300:	2f 1a       	sub	r2, r31
 302:	3f 0a       	sbc	r3, r31
 304:	4f 0a       	sbc	r4, r31
 306:	b6 01       	movw	r22, r12
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 30e:	01 11       	cpse	r16, r1
 310:	01 50       	subi	r16, 0x01	; 1
 312:	21 e0       	ldi	r18, 0x01	; 1
 314:	a2 1a       	sub	r10, r18
 316:	b1 08       	sbc	r11, r1
 318:	a1 14       	cp	r10, r1
 31a:	b1 04       	cpc	r11, r1
 31c:	61 f7       	brne	.-40     	; 0x2f6 <__EEPROM_REGION_LENGTH__+0xf6>
 31e:	f5 c0       	rjmp	.+490    	; 0x50a <__stack+0xab>
 320:	84 36       	cpi	r24, 0x64	; 100
 322:	11 f0       	breq	.+4      	; 0x328 <__EEPROM_REGION_LENGTH__+0x128>
 324:	89 36       	cpi	r24, 0x69	; 105
 326:	71 f5       	brne	.+92     	; 0x384 <__EEPROM_REGION_LENGTH__+0x184>
 328:	f7 01       	movw	r30, r14
 32a:	17 ff       	sbrs	r17, 7
 32c:	08 c0       	rjmp	.+16     	; 0x33e <__EEPROM_REGION_LENGTH__+0x13e>
 32e:	60 81       	ld	r22, Z
 330:	71 81       	ldd	r23, Z+1	; 0x01
 332:	82 81       	ldd	r24, Z+2	; 0x02
 334:	93 81       	ldd	r25, Z+3	; 0x03
 336:	97 01       	movw	r18, r14
 338:	2c 5f       	subi	r18, 0xFC	; 252
 33a:	3f 4f       	sbci	r19, 0xFF	; 255
 33c:	09 c0       	rjmp	.+18     	; 0x350 <__EEPROM_REGION_LENGTH__+0x150>
 33e:	60 81       	ld	r22, Z
 340:	71 81       	ldd	r23, Z+1	; 0x01
 342:	07 2e       	mov	r0, r23
 344:	00 0c       	add	r0, r0
 346:	88 0b       	sbc	r24, r24
 348:	99 0b       	sbc	r25, r25
 34a:	97 01       	movw	r18, r14
 34c:	2e 5f       	subi	r18, 0xFE	; 254
 34e:	3f 4f       	sbci	r19, 0xFF	; 255
 350:	79 01       	movw	r14, r18
 352:	1f 76       	andi	r17, 0x6F	; 111
 354:	31 2e       	mov	r3, r17
 356:	97 ff       	sbrs	r25, 7
 358:	0a c0       	rjmp	.+20     	; 0x36e <__EEPROM_REGION_LENGTH__+0x16e>
 35a:	90 95       	com	r25
 35c:	80 95       	com	r24
 35e:	70 95       	com	r23
 360:	61 95       	neg	r22
 362:	7f 4f       	sbci	r23, 0xFF	; 255
 364:	8f 4f       	sbci	r24, 0xFF	; 255
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	31 2f       	mov	r19, r17
 36a:	30 68       	ori	r19, 0x80	; 128
 36c:	33 2e       	mov	r3, r19
 36e:	2a e0       	ldi	r18, 0x0A	; 10
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	ae 01       	movw	r20, r28
 374:	4f 5f       	subi	r20, 0xFF	; 255
 376:	5f 4f       	sbci	r21, 0xFF	; 255
 378:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 37c:	48 2e       	mov	r4, r24
 37e:	4c 85       	ldd	r20, Y+12	; 0x0c
 380:	44 1a       	sub	r4, r20
 382:	4a c0       	rjmp	.+148    	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 384:	85 37       	cpi	r24, 0x75	; 117
 386:	29 f4       	brne	.+10     	; 0x392 <__EEPROM_REGION_LENGTH__+0x192>
 388:	1f 7e       	andi	r17, 0xEF	; 239
 38a:	a1 2e       	mov	r10, r17
 38c:	2a e0       	ldi	r18, 0x0A	; 10
 38e:	30 e0       	ldi	r19, 0x00	; 0
 390:	25 c0       	rjmp	.+74     	; 0x3dc <__EEPROM_REGION_LENGTH__+0x1dc>
 392:	51 2f       	mov	r21, r17
 394:	59 7f       	andi	r21, 0xF9	; 249
 396:	a5 2e       	mov	r10, r21
 398:	8f 36       	cpi	r24, 0x6F	; 111
 39a:	c1 f0       	breq	.+48     	; 0x3cc <__EEPROM_REGION_LENGTH__+0x1cc>
 39c:	18 f4       	brcc	.+6      	; 0x3a4 <__EEPROM_REGION_LENGTH__+0x1a4>
 39e:	88 35       	cpi	r24, 0x58	; 88
 3a0:	79 f0       	breq	.+30     	; 0x3c0 <__EEPROM_REGION_LENGTH__+0x1c0>
 3a2:	bd c0       	rjmp	.+378    	; 0x51e <__stack+0xbf>
 3a4:	80 37       	cpi	r24, 0x70	; 112
 3a6:	19 f0       	breq	.+6      	; 0x3ae <__EEPROM_REGION_LENGTH__+0x1ae>
 3a8:	88 37       	cpi	r24, 0x78	; 120
 3aa:	21 f0       	breq	.+8      	; 0x3b4 <__EEPROM_REGION_LENGTH__+0x1b4>
 3ac:	b8 c0       	rjmp	.+368    	; 0x51e <__stack+0xbf>
 3ae:	85 2f       	mov	r24, r21
 3b0:	80 61       	ori	r24, 0x10	; 16
 3b2:	a8 2e       	mov	r10, r24
 3b4:	a4 fe       	sbrs	r10, 4
 3b6:	0d c0       	rjmp	.+26     	; 0x3d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 3b8:	9a 2d       	mov	r25, r10
 3ba:	94 60       	ori	r25, 0x04	; 4
 3bc:	a9 2e       	mov	r10, r25
 3be:	09 c0       	rjmp	.+18     	; 0x3d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 3c0:	14 ff       	sbrs	r17, 4
 3c2:	0a c0       	rjmp	.+20     	; 0x3d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 3c4:	a5 2f       	mov	r26, r21
 3c6:	a6 60       	ori	r26, 0x06	; 6
 3c8:	aa 2e       	mov	r10, r26
 3ca:	06 c0       	rjmp	.+12     	; 0x3d8 <__EEPROM_REGION_LENGTH__+0x1d8>
 3cc:	28 e0       	ldi	r18, 0x08	; 8
 3ce:	30 e0       	ldi	r19, 0x00	; 0
 3d0:	05 c0       	rjmp	.+10     	; 0x3dc <__EEPROM_REGION_LENGTH__+0x1dc>
 3d2:	20 e1       	ldi	r18, 0x10	; 16
 3d4:	30 e0       	ldi	r19, 0x00	; 0
 3d6:	02 c0       	rjmp	.+4      	; 0x3dc <__EEPROM_REGION_LENGTH__+0x1dc>
 3d8:	20 e1       	ldi	r18, 0x10	; 16
 3da:	32 e0       	ldi	r19, 0x02	; 2
 3dc:	f7 01       	movw	r30, r14
 3de:	a7 fe       	sbrs	r10, 7
 3e0:	08 c0       	rjmp	.+16     	; 0x3f2 <__EEPROM_REGION_LENGTH__+0x1f2>
 3e2:	60 81       	ld	r22, Z
 3e4:	71 81       	ldd	r23, Z+1	; 0x01
 3e6:	82 81       	ldd	r24, Z+2	; 0x02
 3e8:	93 81       	ldd	r25, Z+3	; 0x03
 3ea:	a7 01       	movw	r20, r14
 3ec:	4c 5f       	subi	r20, 0xFC	; 252
 3ee:	5f 4f       	sbci	r21, 0xFF	; 255
 3f0:	07 c0       	rjmp	.+14     	; 0x400 <__DATA_REGION_LENGTH__>
 3f2:	60 81       	ld	r22, Z
 3f4:	71 81       	ldd	r23, Z+1	; 0x01
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	a7 01       	movw	r20, r14
 3fc:	4e 5f       	subi	r20, 0xFE	; 254
 3fe:	5f 4f       	sbci	r21, 0xFF	; 255
 400:	7a 01       	movw	r14, r20
 402:	ae 01       	movw	r20, r28
 404:	4f 5f       	subi	r20, 0xFF	; 255
 406:	5f 4f       	sbci	r21, 0xFF	; 255
 408:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <__ultoa_invert>
 40c:	48 2e       	mov	r4, r24
 40e:	5c 85       	ldd	r21, Y+12	; 0x0c
 410:	45 1a       	sub	r4, r21
 412:	8a 2d       	mov	r24, r10
 414:	8f 77       	andi	r24, 0x7F	; 127
 416:	38 2e       	mov	r3, r24
 418:	36 fe       	sbrs	r3, 6
 41a:	0d c0       	rjmp	.+26     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 41c:	93 2d       	mov	r25, r3
 41e:	9e 7f       	andi	r25, 0xFE	; 254
 420:	a9 2e       	mov	r10, r25
 422:	4b 14       	cp	r4, r11
 424:	58 f4       	brcc	.+22     	; 0x43c <__DATA_REGION_LENGTH__+0x3c>
 426:	34 fe       	sbrs	r3, 4
 428:	0b c0       	rjmp	.+22     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 42a:	32 fc       	sbrc	r3, 2
 42c:	09 c0       	rjmp	.+18     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 42e:	a3 2d       	mov	r26, r3
 430:	ae 7e       	andi	r26, 0xEE	; 238
 432:	aa 2e       	mov	r10, r26
 434:	05 c0       	rjmp	.+10     	; 0x440 <__DATA_REGION_LENGTH__+0x40>
 436:	14 2d       	mov	r17, r4
 438:	a3 2c       	mov	r10, r3
 43a:	03 c0       	rjmp	.+6      	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 43c:	14 2d       	mov	r17, r4
 43e:	01 c0       	rjmp	.+2      	; 0x442 <__DATA_REGION_LENGTH__+0x42>
 440:	1b 2d       	mov	r17, r11
 442:	a4 fe       	sbrs	r10, 4
 444:	0e c0       	rjmp	.+28     	; 0x462 <__stack+0x3>
 446:	fe 01       	movw	r30, r28
 448:	e4 0d       	add	r30, r4
 44a:	f1 1d       	adc	r31, r1
 44c:	80 81       	ld	r24, Z
 44e:	80 33       	cpi	r24, 0x30	; 48
 450:	21 f4       	brne	.+8      	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
 452:	ea 2d       	mov	r30, r10
 454:	e9 7e       	andi	r30, 0xE9	; 233
 456:	ae 2e       	mov	r10, r30
 458:	08 c0       	rjmp	.+16     	; 0x46a <__stack+0xb>
 45a:	a2 fe       	sbrs	r10, 2
 45c:	05 c0       	rjmp	.+10     	; 0x468 <__stack+0x9>
 45e:	1e 5f       	subi	r17, 0xFE	; 254
 460:	04 c0       	rjmp	.+8      	; 0x46a <__stack+0xb>
 462:	8a 2d       	mov	r24, r10
 464:	86 78       	andi	r24, 0x86	; 134
 466:	09 f0       	breq	.+2      	; 0x46a <__stack+0xb>
 468:	1f 5f       	subi	r17, 0xFF	; 255
 46a:	a3 fc       	sbrc	r10, 3
 46c:	11 c0       	rjmp	.+34     	; 0x490 <__stack+0x31>
 46e:	a0 fe       	sbrs	r10, 0
 470:	06 c0       	rjmp	.+12     	; 0x47e <__stack+0x1f>
 472:	10 17       	cp	r17, r16
 474:	88 f4       	brcc	.+34     	; 0x498 <__stack+0x39>
 476:	04 0d       	add	r16, r4
 478:	b0 2e       	mov	r11, r16
 47a:	b1 1a       	sub	r11, r17
 47c:	0e c0       	rjmp	.+28     	; 0x49a <__stack+0x3b>
 47e:	10 17       	cp	r17, r16
 480:	60 f4       	brcc	.+24     	; 0x49a <__stack+0x3b>
 482:	b6 01       	movw	r22, r12
 484:	80 e2       	ldi	r24, 0x20	; 32
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 48c:	1f 5f       	subi	r17, 0xFF	; 255
 48e:	f7 cf       	rjmp	.-18     	; 0x47e <__stack+0x1f>
 490:	10 17       	cp	r17, r16
 492:	18 f4       	brcc	.+6      	; 0x49a <__stack+0x3b>
 494:	01 1b       	sub	r16, r17
 496:	02 c0       	rjmp	.+4      	; 0x49c <__stack+0x3d>
 498:	b4 2c       	mov	r11, r4
 49a:	00 e0       	ldi	r16, 0x00	; 0
 49c:	a4 fe       	sbrs	r10, 4
 49e:	10 c0       	rjmp	.+32     	; 0x4c0 <__stack+0x61>
 4a0:	b6 01       	movw	r22, r12
 4a2:	80 e3       	ldi	r24, 0x30	; 48
 4a4:	90 e0       	ldi	r25, 0x00	; 0
 4a6:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 4aa:	a2 fe       	sbrs	r10, 2
 4ac:	17 c0       	rjmp	.+46     	; 0x4dc <__stack+0x7d>
 4ae:	a1 fc       	sbrc	r10, 1
 4b0:	03 c0       	rjmp	.+6      	; 0x4b8 <__stack+0x59>
 4b2:	88 e7       	ldi	r24, 0x78	; 120
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <__stack+0x5d>
 4b8:	88 e5       	ldi	r24, 0x58	; 88
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	b6 01       	movw	r22, r12
 4be:	0c c0       	rjmp	.+24     	; 0x4d8 <__stack+0x79>
 4c0:	8a 2d       	mov	r24, r10
 4c2:	86 78       	andi	r24, 0x86	; 134
 4c4:	59 f0       	breq	.+22     	; 0x4dc <__stack+0x7d>
 4c6:	a1 fe       	sbrs	r10, 1
 4c8:	02 c0       	rjmp	.+4      	; 0x4ce <__stack+0x6f>
 4ca:	8b e2       	ldi	r24, 0x2B	; 43
 4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <__stack+0x71>
 4ce:	80 e2       	ldi	r24, 0x20	; 32
 4d0:	a7 fc       	sbrc	r10, 7
 4d2:	8d e2       	ldi	r24, 0x2D	; 45
 4d4:	b6 01       	movw	r22, r12
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 4dc:	4b 14       	cp	r4, r11
 4de:	38 f4       	brcc	.+14     	; 0x4ee <__stack+0x8f>
 4e0:	b6 01       	movw	r22, r12
 4e2:	80 e3       	ldi	r24, 0x30	; 48
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 4ea:	ba 94       	dec	r11
 4ec:	f7 cf       	rjmp	.-18     	; 0x4dc <__stack+0x7d>
 4ee:	4a 94       	dec	r4
 4f0:	e1 e0       	ldi	r30, 0x01	; 1
 4f2:	f0 e0       	ldi	r31, 0x00	; 0
 4f4:	ec 0f       	add	r30, r28
 4f6:	fd 1f       	adc	r31, r29
 4f8:	e4 0d       	add	r30, r4
 4fa:	f1 1d       	adc	r31, r1
 4fc:	80 81       	ld	r24, Z
 4fe:	b6 01       	movw	r22, r12
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 506:	41 10       	cpse	r4, r1
 508:	f2 cf       	rjmp	.-28     	; 0x4ee <__stack+0x8f>
 50a:	00 23       	and	r16, r16
 50c:	09 f4       	brne	.+2      	; 0x510 <__stack+0xb1>
 50e:	30 ce       	rjmp	.-928    	; 0x170 <vfprintf+0x5e>
 510:	b6 01       	movw	r22, r12
 512:	80 e2       	ldi	r24, 0x20	; 32
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <fputc>
 51a:	01 50       	subi	r16, 0x01	; 1
 51c:	f6 cf       	rjmp	.-20     	; 0x50a <__stack+0xab>
 51e:	f6 01       	movw	r30, r12
 520:	87 81       	ldd	r24, Z+7	; 0x07
 522:	90 85       	ldd	r25, Z+8	; 0x08
 524:	02 c0       	rjmp	.+4      	; 0x52a <__stack+0xcb>
 526:	8f ef       	ldi	r24, 0xFF	; 255
 528:	9f ef       	ldi	r25, 0xFF	; 255
 52a:	62 96       	adiw	r28, 0x12	; 18
 52c:	0f b6       	in	r0, 0x3f	; 63
 52e:	f8 94       	cli
 530:	de bf       	out	0x3e, r29	; 62
 532:	0f be       	out	0x3f, r0	; 63
 534:	cd bf       	out	0x3d, r28	; 61
 536:	df 91       	pop	r29
 538:	cf 91       	pop	r28
 53a:	1f 91       	pop	r17
 53c:	0f 91       	pop	r16
 53e:	ff 90       	pop	r15
 540:	ef 90       	pop	r14
 542:	df 90       	pop	r13
 544:	cf 90       	pop	r12
 546:	bf 90       	pop	r11
 548:	af 90       	pop	r10
 54a:	9f 90       	pop	r9
 54c:	8f 90       	pop	r8
 54e:	7f 90       	pop	r7
 550:	6f 90       	pop	r6
 552:	4f 90       	pop	r4
 554:	3f 90       	pop	r3
 556:	2f 90       	pop	r2
 558:	08 95       	ret

Disassembly of section .text.avrlibc:

00000d4c <strnlen>:
 d4c:	cf 92       	push	r12
 d4e:	df 92       	push	r13
 d50:	ef 92       	push	r14
 d52:	6b 01       	movw	r12, r22
 d54:	e8 2e       	mov	r14, r24
 d56:	a8 2f       	mov	r26, r24
 d58:	cb 01       	movw	r24, r22
 d5a:	41 15       	cp	r20, r1
 d5c:	51 05       	cpc	r21, r1
 d5e:	31 f4       	brne	.+12     	; 0xd6c <strnlen+0x20>
 d60:	8c 19       	sub	r24, r12
 d62:	9d 09       	sbc	r25, r13
 d64:	ef 90       	pop	r14
 d66:	df 90       	pop	r13
 d68:	cf 90       	pop	r12
 d6a:	08 95       	ret
 d6c:	fc 01       	movw	r30, r24
 d6e:	24 91       	lpm	r18, Z
 d70:	a7 fd       	sbrc	r26, 7
 d72:	20 81       	ld	r18, Z
 d74:	22 23       	and	r18, r18
 d76:	a1 f3       	breq	.-24     	; 0xd60 <strnlen+0x14>
 d78:	01 96       	adiw	r24, 0x01	; 1
 d7a:	a1 1d       	adc	r26, r1
 d7c:	41 50       	subi	r20, 0x01	; 1
 d7e:	51 09       	sbc	r21, r1
 d80:	ec cf       	rjmp	.-40     	; 0xd5a <strnlen+0xe>

Disassembly of section .text.avrlibc:

00000bb2 <fputc>:
 bb2:	0f 93       	push	r16
 bb4:	1f 93       	push	r17
 bb6:	cf 93       	push	r28
 bb8:	df 93       	push	r29
 bba:	fb 01       	movw	r30, r22
 bbc:	24 81       	ldd	r18, Z+4	; 0x04
 bbe:	21 fd       	sbrc	r18, 1
 bc0:	03 c0       	rjmp	.+6      	; 0xbc8 <fputc+0x16>
 bc2:	8f ef       	ldi	r24, 0xFF	; 255
 bc4:	9f ef       	ldi	r25, 0xFF	; 255
 bc6:	2c c0       	rjmp	.+88     	; 0xc20 <fputc+0x6e>
 bc8:	22 ff       	sbrs	r18, 2
 bca:	16 c0       	rjmp	.+44     	; 0xbf8 <fputc+0x46>
 bcc:	47 81       	ldd	r20, Z+7	; 0x07
 bce:	50 85       	ldd	r21, Z+8	; 0x08
 bd0:	25 81       	ldd	r18, Z+5	; 0x05
 bd2:	36 81       	ldd	r19, Z+6	; 0x06
 bd4:	42 17       	cp	r20, r18
 bd6:	53 07       	cpc	r21, r19
 bd8:	44 f4       	brge	.+16     	; 0xbea <fputc+0x38>
 bda:	a0 81       	ld	r26, Z
 bdc:	b1 81       	ldd	r27, Z+1	; 0x01
 bde:	9d 01       	movw	r18, r26
 be0:	2f 5f       	subi	r18, 0xFF	; 255
 be2:	3f 4f       	sbci	r19, 0xFF	; 255
 be4:	31 83       	std	Z+1, r19	; 0x01
 be6:	20 83       	st	Z, r18
 be8:	8c 93       	st	X, r24
 bea:	27 81       	ldd	r18, Z+7	; 0x07
 bec:	30 85       	ldd	r19, Z+8	; 0x08
 bee:	2f 5f       	subi	r18, 0xFF	; 255
 bf0:	3f 4f       	sbci	r19, 0xFF	; 255
 bf2:	30 87       	std	Z+8, r19	; 0x08
 bf4:	27 83       	std	Z+7, r18	; 0x07
 bf6:	14 c0       	rjmp	.+40     	; 0xc20 <fputc+0x6e>
 bf8:	8b 01       	movw	r16, r22
 bfa:	ec 01       	movw	r28, r24
 bfc:	fb 01       	movw	r30, r22
 bfe:	01 84       	ldd	r0, Z+9	; 0x09
 c00:	f2 85       	ldd	r31, Z+10	; 0x0a
 c02:	e0 2d       	mov	r30, r0
 c04:	09 95       	icall
 c06:	89 2b       	or	r24, r25
 c08:	e1 f6       	brne	.-72     	; 0xbc2 <fputc+0x10>
 c0a:	d8 01       	movw	r26, r16
 c0c:	17 96       	adiw	r26, 0x07	; 7
 c0e:	8d 91       	ld	r24, X+
 c10:	9c 91       	ld	r25, X
 c12:	18 97       	sbiw	r26, 0x08	; 8
 c14:	01 96       	adiw	r24, 0x01	; 1
 c16:	18 96       	adiw	r26, 0x08	; 8
 c18:	9c 93       	st	X, r25
 c1a:	8e 93       	st	-X, r24
 c1c:	17 97       	sbiw	r26, 0x07	; 7
 c1e:	ce 01       	movw	r24, r28
 c20:	df 91       	pop	r29
 c22:	cf 91       	pop	r28
 c24:	1f 91       	pop	r17
 c26:	0f 91       	pop	r16
 c28:	08 95       	ret

Disassembly of section .text.avrlibc:

000007f8 <__ultoa_invert>:
 7f8:	fa 01       	movw	r30, r20
 7fa:	aa 27       	eor	r26, r26
 7fc:	28 30       	cpi	r18, 0x08	; 8
 7fe:	51 f1       	breq	.+84     	; 0x854 <__ultoa_invert+0x5c>
 800:	20 31       	cpi	r18, 0x10	; 16
 802:	81 f1       	breq	.+96     	; 0x864 <__ultoa_invert+0x6c>
 804:	e8 94       	clt
 806:	6f 93       	push	r22
 808:	6e 7f       	andi	r22, 0xFE	; 254
 80a:	6e 5f       	subi	r22, 0xFE	; 254
 80c:	7f 4f       	sbci	r23, 0xFF	; 255
 80e:	8f 4f       	sbci	r24, 0xFF	; 255
 810:	9f 4f       	sbci	r25, 0xFF	; 255
 812:	af 4f       	sbci	r26, 0xFF	; 255
 814:	b1 e0       	ldi	r27, 0x01	; 1
 816:	3e d0       	rcall	.+124    	; 0x894 <__ultoa_invert+0x9c>
 818:	b4 e0       	ldi	r27, 0x04	; 4
 81a:	3c d0       	rcall	.+120    	; 0x894 <__ultoa_invert+0x9c>
 81c:	67 0f       	add	r22, r23
 81e:	78 1f       	adc	r23, r24
 820:	89 1f       	adc	r24, r25
 822:	9a 1f       	adc	r25, r26
 824:	a1 1d       	adc	r26, r1
 826:	68 0f       	add	r22, r24
 828:	79 1f       	adc	r23, r25
 82a:	8a 1f       	adc	r24, r26
 82c:	91 1d       	adc	r25, r1
 82e:	a1 1d       	adc	r26, r1
 830:	6a 0f       	add	r22, r26
 832:	71 1d       	adc	r23, r1
 834:	81 1d       	adc	r24, r1
 836:	91 1d       	adc	r25, r1
 838:	a1 1d       	adc	r26, r1
 83a:	20 d0       	rcall	.+64     	; 0x87c <__ultoa_invert+0x84>
 83c:	09 f4       	brne	.+2      	; 0x840 <__ultoa_invert+0x48>
 83e:	68 94       	set
 840:	3f 91       	pop	r19
 842:	2a e0       	ldi	r18, 0x0A	; 10
 844:	26 9f       	mul	r18, r22
 846:	11 24       	eor	r1, r1
 848:	30 19       	sub	r19, r0
 84a:	30 5d       	subi	r19, 0xD0	; 208
 84c:	31 93       	st	Z+, r19
 84e:	de f6       	brtc	.-74     	; 0x806 <__ultoa_invert+0xe>
 850:	cf 01       	movw	r24, r30
 852:	08 95       	ret
 854:	46 2f       	mov	r20, r22
 856:	47 70       	andi	r20, 0x07	; 7
 858:	40 5d       	subi	r20, 0xD0	; 208
 85a:	41 93       	st	Z+, r20
 85c:	b3 e0       	ldi	r27, 0x03	; 3
 85e:	0f d0       	rcall	.+30     	; 0x87e <__ultoa_invert+0x86>
 860:	c9 f7       	brne	.-14     	; 0x854 <__ultoa_invert+0x5c>
 862:	f6 cf       	rjmp	.-20     	; 0x850 <__ultoa_invert+0x58>
 864:	46 2f       	mov	r20, r22
 866:	4f 70       	andi	r20, 0x0F	; 15
 868:	40 5d       	subi	r20, 0xD0	; 208
 86a:	4a 33       	cpi	r20, 0x3A	; 58
 86c:	18 f0       	brcs	.+6      	; 0x874 <__ultoa_invert+0x7c>
 86e:	49 5d       	subi	r20, 0xD9	; 217
 870:	31 fd       	sbrc	r19, 1
 872:	40 52       	subi	r20, 0x20	; 32
 874:	41 93       	st	Z+, r20
 876:	02 d0       	rcall	.+4      	; 0x87c <__ultoa_invert+0x84>
 878:	a9 f7       	brne	.-22     	; 0x864 <__ultoa_invert+0x6c>
 87a:	ea cf       	rjmp	.-44     	; 0x850 <__ultoa_invert+0x58>
 87c:	b4 e0       	ldi	r27, 0x04	; 4
 87e:	a6 95       	lsr	r26
 880:	97 95       	ror	r25
 882:	87 95       	ror	r24
 884:	77 95       	ror	r23
 886:	67 95       	ror	r22
 888:	ba 95       	dec	r27
 88a:	c9 f7       	brne	.-14     	; 0x87e <__ultoa_invert+0x86>
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	61 05       	cpc	r22, r1
 890:	71 05       	cpc	r23, r1
 892:	08 95       	ret
 894:	9b 01       	movw	r18, r22
 896:	ac 01       	movw	r20, r24
 898:	0a 2e       	mov	r0, r26
 89a:	06 94       	lsr	r0
 89c:	57 95       	ror	r21
 89e:	47 95       	ror	r20
 8a0:	37 95       	ror	r19
 8a2:	27 95       	ror	r18
 8a4:	ba 95       	dec	r27
 8a6:	c9 f7       	brne	.-14     	; 0x89a <__ultoa_invert+0xa2>
 8a8:	62 0f       	add	r22, r18
 8aa:	73 1f       	adc	r23, r19
 8ac:	84 1f       	adc	r24, r20
 8ae:	95 1f       	adc	r25, r21
 8b0:	a0 1d       	adc	r26, r0
 8b2:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

00000d14 <__prologue_saves__>:
 d14:	2f 92       	push	r2
 d16:	3f 92       	push	r3
 d18:	4f 92       	push	r4
 d1a:	5f 92       	push	r5
 d1c:	6f 92       	push	r6
 d1e:	7f 92       	push	r7
 d20:	8f 92       	push	r8
 d22:	9f 92       	push	r9
 d24:	af 92       	push	r10
 d26:	bf 92       	push	r11
 d28:	cf 92       	push	r12
 d2a:	df 92       	push	r13
 d2c:	ef 92       	push	r14
 d2e:	ff 92       	push	r15
 d30:	0f 93       	push	r16
 d32:	1f 93       	push	r17
 d34:	cf 93       	push	r28
 d36:	df 93       	push	r29
 d38:	cd b7       	in	r28, 0x3d	; 61
 d3a:	de b7       	in	r29, 0x3e	; 62
 d3c:	ca 1b       	sub	r28, r26
 d3e:	db 0b       	sbc	r29, r27
 d40:	0f b6       	in	r0, 0x3f	; 63
 d42:	f8 94       	cli
 d44:	de bf       	out	0x3e, r29	; 62
 d46:	0f be       	out	0x3f, r0	; 63
 d48:	cd bf       	out	0x3d, r28	; 61
 d4a:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000d82 <__epilogue_restores__>:
 d82:	2a 88       	ldd	r2, Y+18	; 0x12
 d84:	39 88       	ldd	r3, Y+17	; 0x11
 d86:	48 88       	ldd	r4, Y+16	; 0x10
 d88:	5f 84       	ldd	r5, Y+15	; 0x0f
 d8a:	6e 84       	ldd	r6, Y+14	; 0x0e
 d8c:	7d 84       	ldd	r7, Y+13	; 0x0d
 d8e:	8c 84       	ldd	r8, Y+12	; 0x0c
 d90:	9b 84       	ldd	r9, Y+11	; 0x0b
 d92:	aa 84       	ldd	r10, Y+10	; 0x0a
 d94:	b9 84       	ldd	r11, Y+9	; 0x09
 d96:	c8 84       	ldd	r12, Y+8	; 0x08
 d98:	df 80       	ldd	r13, Y+7	; 0x07
 d9a:	ee 80       	ldd	r14, Y+6	; 0x06
 d9c:	fd 80       	ldd	r15, Y+5	; 0x05
 d9e:	0c 81       	ldd	r16, Y+4	; 0x04
 da0:	1b 81       	ldd	r17, Y+3	; 0x03
 da2:	aa 81       	ldd	r26, Y+2	; 0x02
 da4:	b9 81       	ldd	r27, Y+1	; 0x01
 da6:	ce 0f       	add	r28, r30
 da8:	d1 1d       	adc	r29, r1
 daa:	0f b6       	in	r0, 0x3f	; 63
 dac:	f8 94       	cli
 dae:	de bf       	out	0x3e, r29	; 62
 db0:	0f be       	out	0x3f, r0	; 63
 db2:	cd bf       	out	0x3d, r28	; 61
 db4:	ed 01       	movw	r28, r26
 db6:	08 95       	ret
